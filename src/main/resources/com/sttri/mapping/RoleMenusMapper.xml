<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sttri.dao.RoleMenusMapper" >
  <resultMap id="BaseResultMap" type="com.sttri.entity.RoleMenus" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="Aid" property="aid" jdbcType="INTEGER" />
    <result column="Mid" property="mid" jdbcType="INTEGER" />
    <result column="AddTime" property="addtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, Aid, Mid, AddTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sttri.entity.RoleMenusCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role_menus
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from role_menus
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from role_menus
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sttri.entity.RoleMenusCriteria" >
    delete from role_menus
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sttri.entity.RoleMenus" >
    insert into role_menus (ID, Aid, Mid, 
      AddTime)
    values (#{id,jdbcType=INTEGER}, #{aid,jdbcType=INTEGER}, #{mid,jdbcType=INTEGER}, 
      #{addtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.sttri.entity.RoleMenus" >
    insert into role_menus
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="aid != null" >
        Aid,
      </if>
      <if test="mid != null" >
        Mid,
      </if>
      <if test="addtime != null" >
        AddTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="aid != null" >
        #{aid,jdbcType=INTEGER},
      </if>
      <if test="mid != null" >
        #{mid,jdbcType=INTEGER},
      </if>
      <if test="addtime != null" >
        #{addtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sttri.entity.RoleMenusCriteria" resultType="java.lang.Integer" >
    select count(*) from role_menus
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update role_menus
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.aid != null" >
        Aid = #{record.aid,jdbcType=INTEGER},
      </if>
      <if test="record.mid != null" >
        Mid = #{record.mid,jdbcType=INTEGER},
      </if>
      <if test="record.addtime != null" >
        AddTime = #{record.addtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update role_menus
    set ID = #{record.id,jdbcType=INTEGER},
      Aid = #{record.aid,jdbcType=INTEGER},
      Mid = #{record.mid,jdbcType=INTEGER},
      AddTime = #{record.addtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sttri.entity.RoleMenus" >
    update role_menus
    <set >
      <if test="aid != null" >
        Aid = #{aid,jdbcType=INTEGER},
      </if>
      <if test="mid != null" >
        Mid = #{mid,jdbcType=INTEGER},
      </if>
      <if test="addtime != null" >
        AddTime = #{addtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sttri.entity.RoleMenus" >
    update role_menus
    set Aid = #{aid,jdbcType=INTEGER},
      Mid = #{mid,jdbcType=INTEGER},
      AddTime = #{addtime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  
  <resultMap type="com.sttri.entity.RoleMenus" id="RoleMenusMap"
		extends="BaseResultMap">
		<collection property="menus" javaType="list"
			ofType="com.sttri.entity.Menus">
			<id property="id" column="mid" jdbcType="INTEGER" />
			<result property="name" column="name" jdbcType="VARCHAR" />
			<result property="url" column="url" jdbcType="VARCHAR" />
			<result property="pid" column="pid" jdbcType="INTEGER" />
		</collection>
	</resultMap>
	<select id="queryMenus" resultMap="RoleMenusMap" parameterType="java.lang.Integer" >
		select r.id,m.id as mid,m.name,m.url,m.pid from role_menus r left join menus m on m.id = r.mid
		where r.aid=#{r.aid,jdbcType=INTEGER}
		
	</select>
</mapper>